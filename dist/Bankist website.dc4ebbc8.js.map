{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["'use strict';\n//Selecting elements\nconst modal = document.querySelector('.modal');\nconst overlay = document.querySelector('.overlay');\nconst btnCloseModal = document.querySelector('.btn--close-modal');\nconst btnsOpenModal = document.querySelectorAll('.btn--show-modal');\nconst btnScrollTo = document.querySelector('.btn--scroll-to');\nconst section1 = document.querySelector('#section--1');\nconst header = document.querySelector('.header');\n///////////////////////////////////////\n// Modal window\nconst openModal = function() {\n    modal.classList.remove('hidden');\n    overlay.classList.remove('hidden');\n};\nconst closeModal = function() {\n    modal.classList.add('hidden');\n    overlay.classList.add('hidden');\n};\nfor(let i = 0; i < btnsOpenModal.length; i++)btnsOpenModal[i].addEventListener('click', openModal);\nbtnCloseModal.addEventListener('click', closeModal);\noverlay.addEventListener('click', closeModal);\ndocument.addEventListener('keydown', function(e) {\n    if (e.key === 'Escape' && !modal.classList.contains('hidden')) closeModal();\n});\n//Button scrolling\nbtnScrollTo.addEventListener('click', function(e) {\n    // const s1coords = section1.getBoundingClientRect();\n    // console.log(s1coords);\n    // console.log(e.target.getBoundingClientRect());\n    // console.log('current scroll', window.pageXOffset, pageYOffset);\n    // console.log(\n    //   'height/width of viewport',\n    //   document.documentElement.clientHeight,\n    //   document.documentElement.clientWidth\n    // );\n    //scrolling\n    // window.scrollTo(\n    //   s1coords.left + window.pageXOffset,\n    //   s1coords.top + window.pageYOffset\n    // );\n    // window.scrollTo({\n    //   left: s1coords.left + window.pageXOffset,\n    //   top: s1coords.top + window.pageYOffset,\n    //   behavior: 'smooth',\n    // });\n    section1.scrollIntoView({\n        behavior: 'smooth'\n    });\n});\n// document.querySelectorAll('.nav__link').forEach(function (el) {\n//   el.addEventListener('click', function (e) {\n//     e.preventDefault();\n//     const id = this.getAttribute('href');\n//     document.querySelector(id).scrollIntoView({ behavior: 'smooth' });\n//     console.log(id);\n//   });\n// });\n//PAGE NAVIGATION USING EVENT DELEGATION\ndocument.querySelector('.nav__links').addEventListener('click', function(e) {\n    e.preventDefault();\n    if (e.target.classList.contains('nav__link')) {\n        const id = e.target.getAttribute('href');\n        document.querySelector(id).scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n});\nconst h1 = document.querySelector('h1');\nconst alerth1 = function(e) {\n    alert('addEventListener: Great! You are reading the heading');\n};\nh1.addEventListener('mouseenter', alerth1);\nsetTimeout(()=>h1.removeEventListener('mouseenter', alerth1), 3000);\n// h1.onmouseenter = function (e) {\n//   alert('onmouseenter: Great! You are reading the heading');\n// };\n//onmouseenter can not allow for duplicating events, the second one will override the first\n//addEventListener allows to add different events to the same element without overrriding the previous one\n//addEventListener allows to remove event using removeEventListener\n//rgb(255,255,255)\n// const randomInt = (min, max) =>\n//   Math.floor(Math.random() * (max - min + 1) + min);\n// const randomColor = () =>\n//   `rgb(${randomInt(0, 255)},${randomInt(0, 255)},${randomInt(0, 255)} )`;\n// console.log(randomColor());\n// document.querySelector('.nav__link').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n// document.querySelector('.nav__links').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n// document.querySelector('.nav').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n//BUILDING A TABBED COMPONENT\n//Selecting elements\nconst tabs = document.querySelectorAll('.operations__tab');\nconst tabsContainer = document.querySelector('.operations__tab-container');\nconst tabsContent = document.querySelectorAll('.operations__content');\n//Event listener using events delegation\ntabsContainer.addEventListener('click', function(e) {\n    const clicked = e.target.closest('.operations__tab');\n    console.log(clicked);\n    //Guard close\n    if (!clicked) return;\n    //Active tab\n    tabs.forEach((t)=>t.classList.remove('operations__tab--active'));\n    clicked.classList.add('operations__tab--active');\n    //Activate content area\n    tabsContent.forEach((t)=>t.classList.remove('operations__content--active'));\n    document.querySelector(`.operations__content--${clicked.dataset.tab}`).classList.add('operations__content--active');\n});\n//MENU FADE  NAVIGATION\nconst nav = document.querySelector('.nav');\nconst handleHover = function(e) {\n    if (e.target.classList.contains('nav__link')) {\n        const link = e.target;\n        const siblings = link.closest('.nav').querySelectorAll('.nav__link');\n        const logo = link.closest('.nav').querySelector('img');\n        siblings.forEach((el)=>{\n            if (el !== link) el.style.opacity = this;\n        });\n        logo.style.opacity = this;\n    }\n};\n// Passing 'argument' into event handler\nnav.addEventListener('mouseover', handleHover.bind(0.5));\nnav.addEventListener('mouseout', handleHover.bind(1));\n// //Sticky Navigation\n// const initialCoords = section1.getBoundingClientRect();\n// window.addEventListener('scroll', function (e) {\n//   if (window.scrollY > initialCoords.top) nav.classList.add('sticky');\n//   else nav.classList.remove('sticky');\n// });\n//STICKY NAVAGATION USING INTERSECTION OBSERVER API\n// const obsCallback = function (entries, observer) {\n//   entries.forEach(entry => {\n//     console.log(entry);\n//   });\n// };\n// //The root element is the element that the target is intersecting, the threshold is the percentage of intersection at which the callback is called\n// const obsOptions = {\n//   root: null,\n//   threshold: 0.1,\n// };\n// const observer = new IntersectionObserver(obsCallback, obsOptions);\n// observer.observe(section1);\n//STICKY NAVAGATION USING INTERSECTIONOBSERVER API\nconst navHeight = nav.getBoundingClientRect().height;\nconst stickyNav = function(entries) {\n    const [entry] = entries;\n    if (!entry.isIntersecting) nav.classList.add('sticky');\n    else nav.classList.remove('sticky');\n};\nconst headerObserver = new IntersectionObserver(stickyNav, {\n    root: null,\n    threshold: 0,\n    rootMargin: `-${navHeight}px`\n});\nheaderObserver.observe(header);\n//REVEAL SECTIONS ON SCROLL\nconst allSections = document.querySelectorAll('.section');\nconst revealSection = function(entries, observer) {\n    const [entry] = entries;\n    if (!entry.isIntersecting) return;\n    entry.target.classList.remove('section--hidden');\n    observer.unobserve(entry.target);\n};\nconst sectionObserver = new IntersectionObserver(revealSection, {\n    root: null,\n    threshold: 0.15\n});\nallSections.forEach(function(section) {\n    sectionObserver.observe(section);\n    section.classList.add('section--hidden');\n});\n//LAZY LOADING IMAGES\nconst imgTargets = document.querySelectorAll('img[data-src]');\nconst loading = function(entries, observer) {\n    const [entry] = entries;\n    if (!entry.isIntersecting) return;\n    //Replace src with data-src\n    entry.target.src = entry.target.dataset.src;\n    entry.target.addEventListener('load', function() {\n        entry.target.classList.remove('lazy-img');\n    });\n    observer.unobserve(entry.target);\n};\nconst imgObserver = new IntersectionObserver(loading, {\n    root: null,\n    threshold: 0,\n    //setting root margin to load images before the getting to the image\n    rootMargin: '200px'\n});\nimgTargets.forEach((img)=>imgObserver.observe(img));\n//SLIDER COMPONENT\nconst slides = document.querySelectorAll('.slide');\nconst slider = document.querySelector('.slider');\nconst btnLeft = document.querySelector('.slider__btn--left');\nconst btnRight = document.querySelector('.slider__btn--right');\nlet curSlide = 0;\nconst maxSlide = slides.length;\nslider.style.overflow = 'visible';\n// slider.style.transform = 'scale(0.3)';\nconst goToSlide = function(slide) {\n    slides.forEach((s, i)=>s.style.transform = `translateX(${100 * (i - slide)}%)`);\n};\ngoToSlide(0);\n//Next slide\nconst nextSlide = function() {\n    if (curSlide === maxSlide - 1) curSlide = 0;\n    else curSlide++;\n    goToSlide(curSlide);\n};\n//Previous slide\nconst prevSlide = function() {\n    if (curSlide === 0) curSlide = maxSlide - 1;\n    else curSlide--;\n    goToSlide(curSlide);\n};\nbtnRight.addEventListener('click', nextSlide);\nbtnLeft.addEventListener('click', prevSlide);\n\n//# sourceMappingURL=Bankist website.dc4ebbc8.js.map\n","'use strict';\n\n//Selecting elements\nconst modal = document.querySelector('.modal');\nconst overlay = document.querySelector('.overlay');\nconst btnCloseModal = document.querySelector('.btn--close-modal');\nconst btnsOpenModal = document.querySelectorAll('.btn--show-modal');\nconst btnScrollTo = document.querySelector('.btn--scroll-to');\nconst section1 = document.querySelector('#section--1');\nconst header = document.querySelector('.header');\n\n///////////////////////////////////////\n// Modal window\n\nconst openModal = function () {\n  modal.classList.remove('hidden');\n  overlay.classList.remove('hidden');\n};\n\nconst closeModal = function () {\n  modal.classList.add('hidden');\n  overlay.classList.add('hidden');\n};\n\nfor (let i = 0; i < btnsOpenModal.length; i++)\n  btnsOpenModal[i].addEventListener('click', openModal);\n\nbtnCloseModal.addEventListener('click', closeModal);\noverlay.addEventListener('click', closeModal);\n\ndocument.addEventListener('keydown', function (e) {\n  if (e.key === 'Escape' && !modal.classList.contains('hidden')) {\n    closeModal();\n  }\n});\n\n//Button scrolling\nbtnScrollTo.addEventListener('click', function (e) {\n  // const s1coords = section1.getBoundingClientRect();\n  // console.log(s1coords);\n\n  // console.log(e.target.getBoundingClientRect());\n\n  // console.log('current scroll', window.pageXOffset, pageYOffset);\n\n  // console.log(\n  //   'height/width of viewport',\n  //   document.documentElement.clientHeight,\n  //   document.documentElement.clientWidth\n  // );\n\n  //scrolling\n  // window.scrollTo(\n  //   s1coords.left + window.pageXOffset,\n  //   s1coords.top + window.pageYOffset\n  // );\n\n  // window.scrollTo({\n  //   left: s1coords.left + window.pageXOffset,\n  //   top: s1coords.top + window.pageYOffset,\n  //   behavior: 'smooth',\n  // });\n\n  section1.scrollIntoView({ behavior: 'smooth' });\n});\n\n// document.querySelectorAll('.nav__link').forEach(function (el) {\n//   el.addEventListener('click', function (e) {\n//     e.preventDefault();\n//     const id = this.getAttribute('href');\n//     document.querySelector(id).scrollIntoView({ behavior: 'smooth' });\n//     console.log(id);\n//   });\n// });\n\n//PAGE NAVIGATION USING EVENT DELEGATION\ndocument.querySelector('.nav__links').addEventListener('click', function (e) {\n  e.preventDefault();\n\n  if (e.target.classList.contains('nav__link')) {\n    const id = e.target.getAttribute('href');\n    document.querySelector(id).scrollIntoView({ behavior: 'smooth' });\n  }\n});\n\nconst h1 = document.querySelector('h1');\n\nconst alerth1 = function (e) {\n  alert('addEventListener: Great! You are reading the heading');\n};\n\nh1.addEventListener('mouseenter', alerth1);\n\nsetTimeout(() => h1.removeEventListener('mouseenter', alerth1), 3000);\n\n// h1.onmouseenter = function (e) {\n//   alert('onmouseenter: Great! You are reading the heading');\n// };\n//onmouseenter can not allow for duplicating events, the second one will override the first\n//addEventListener allows to add different events to the same element without overrriding the previous one\n//addEventListener allows to remove event using removeEventListener\n\n//rgb(255,255,255)\n\n// const randomInt = (min, max) =>\n//   Math.floor(Math.random() * (max - min + 1) + min);\n\n// const randomColor = () =>\n//   `rgb(${randomInt(0, 255)},${randomInt(0, 255)},${randomInt(0, 255)} )`;\n// console.log(randomColor());\n// document.querySelector('.nav__link').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n// document.querySelector('.nav__links').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n// document.querySelector('.nav').addEventListener('click', function (e) {\n//   this.style.backgroundColor = randomColor();\n// });\n\n//BUILDING A TABBED COMPONENT\n\n//Selecting elements\nconst tabs = document.querySelectorAll('.operations__tab');\nconst tabsContainer = document.querySelector('.operations__tab-container');\nconst tabsContent = document.querySelectorAll('.operations__content');\n\n//Event listener using events delegation\ntabsContainer.addEventListener('click', function (e) {\n  const clicked = e.target.closest('.operations__tab');\n\n  console.log(clicked);\n\n  //Guard close\n  if (!clicked) return;\n\n  //Active tab\n  tabs.forEach(t => t.classList.remove('operations__tab--active'));\n  clicked.classList.add('operations__tab--active');\n\n  //Activate content area\n  tabsContent.forEach(t => t.classList.remove('operations__content--active'));\n  document\n    .querySelector(`.operations__content--${clicked.dataset.tab}`)\n    .classList.add('operations__content--active');\n});\n\n//MENU FADE  NAVIGATION\nconst nav = document.querySelector('.nav');\n\nconst handleHover = function (e) {\n  if (e.target.classList.contains('nav__link')) {\n    const link = e.target;\n    const siblings = link.closest('.nav').querySelectorAll('.nav__link');\n    const logo = link.closest('.nav').querySelector('img');\n\n    siblings.forEach(el => {\n      if (el !== link) el.style.opacity = this;\n    });\n    logo.style.opacity = this;\n  }\n};\n\n// Passing 'argument' into event handler\nnav.addEventListener('mouseover', handleHover.bind(0.5));\n\nnav.addEventListener('mouseout', handleHover.bind(1));\n\n// //Sticky Navigation\n// const initialCoords = section1.getBoundingClientRect();\n\n// window.addEventListener('scroll', function (e) {\n//   if (window.scrollY > initialCoords.top) nav.classList.add('sticky');\n//   else nav.classList.remove('sticky');\n// });\n\n//STICKY NAVAGATION USING INTERSECTION OBSERVER API\n// const obsCallback = function (entries, observer) {\n//   entries.forEach(entry => {\n//     console.log(entry);\n//   });\n// };\n\n// //The root element is the element that the target is intersecting, the threshold is the percentage of intersection at which the callback is called\n// const obsOptions = {\n//   root: null,\n//   threshold: 0.1,\n// };\n\n// const observer = new IntersectionObserver(obsCallback, obsOptions);\n// observer.observe(section1);\n\n//STICKY NAVAGATION USING INTERSECTIONOBSERVER API\nconst navHeight = nav.getBoundingClientRect().height;\n\nconst stickyNav = function (entries) {\n  const [entry] = entries;\n\n  if (!entry.isIntersecting) nav.classList.add('sticky');\n  else nav.classList.remove('sticky');\n};\n\nconst headerObserver = new IntersectionObserver(stickyNav, {\n  root: null,\n  threshold: 0,\n  rootMargin: `-${navHeight}px`,\n});\nheaderObserver.observe(header);\n\n//REVEAL SECTIONS ON SCROLL\nconst allSections = document.querySelectorAll('.section');\nconst revealSection = function (entries, observer) {\n  const [entry] = entries;\n\n  if (!entry.isIntersecting) return;\n  entry.target.classList.remove('section--hidden');\n  observer.unobserve(entry.target);\n};\n\nconst sectionObserver = new IntersectionObserver(revealSection, {\n  root: null,\n  threshold: 0.15,\n});\n\nallSections.forEach(function (section) {\n  sectionObserver.observe(section);\n  section.classList.add('section--hidden');\n});\n\n//LAZY LOADING IMAGES\nconst imgTargets = document.querySelectorAll('img[data-src]');\n\nconst loading = function (entries, observer) {\n  const [entry] = entries;\n\n  if (!entry.isIntersecting) return;\n\n  //Replace src with data-src\n  entry.target.src = entry.target.dataset.src;\n  entry.target.addEventListener('load', function () {\n    entry.target.classList.remove('lazy-img');\n  });\n  observer.unobserve(entry.target);\n};\n\nconst imgObserver = new IntersectionObserver(loading, {\n  root: null,\n  threshold: 0,\n  //setting root margin to load images before the getting to the image\n  rootMargin: '200px',\n});\n\nimgTargets.forEach(img => imgObserver.observe(img));\n\n//SLIDER COMPONENT\nconst slides = document.querySelectorAll('.slide');\nconst slider = document.querySelector('.slider');\nconst btnLeft = document.querySelector('.slider__btn--left');\nconst btnRight = document.querySelector('.slider__btn--right');\n\nlet curSlide = 0;\nconst maxSlide = slides.length;\n\nslider.style.overflow = 'visible';\n// slider.style.transform = 'scale(0.3)';\n\nconst goToSlide = function (slide) {\n  slides.forEach(\n    (s, i) => (s.style.transform = `translateX(${100 * (i - slide)}%)`)\n  );\n};\n\ngoToSlide(0);\n\n//Next slide\nconst nextSlide = function () {\n  if (curSlide === maxSlide - 1) {\n    curSlide = 0;\n  } else {\n    curSlide++;\n  }\n  goToSlide(curSlide);\n};\n\n//Previous slide\nconst prevSlide = function () {\n  if (curSlide === 0) {\n    curSlide = maxSlide - 1;\n  } else {\n    curSlide--;\n  }\n  goToSlide(curSlide);\n};\n\nbtnRight.addEventListener('click', nextSlide);\nbtnLeft.addEventListener('click', prevSlide);\n"],"names":["modal","document","querySelector","overlay","btnCloseModal","btnsOpenModal","querySelectorAll","btnScrollTo","section1","header","openModal","classList","remove","closeModal","add","i","length","addEventListener","e","key","contains","scrollIntoView","behavior","preventDefault","target","id","getAttribute","h1","alerth1","alert","setTimeout","removeEventListener","tabs","tabsContainer","tabsContent","clicked","closest","console","log","forEach","t","dataset","tab","nav","handleHover","link","siblings","logo","el","style","opacity","bind","navHeight","getBoundingClientRect","height","stickyNav","entries","entry","isIntersecting","headerObserver","IntersectionObserver","root","threshold","rootMargin","observe","allSections","revealSection","observer","unobserve","sectionObserver","section","imgTargets","loading","src","imgObserver","img","slides","slider","btnLeft","btnRight","curSlide","maxSlide","overflow","goToSlide","slide","s","transform","nextSlide","prevSlide"],"version":3,"file":"Bankist website.dc4ebbc8.js.map"}